import java.util.*;

class Job {
    int id;
    int deadline;
    int profit;

    Job(int id, int deadline, int profit) {
        this.id = id;
        this.deadline = deadline;
        this.profit = profit;
    }
}

class Comp implements Comparator<Job> {
    @Override
    public int compare(Job j1, Job j2) {
        return Integer.compare(j2.profit, j1.profit);
    }
}

public class Solution {
    public static int[] jobScheduling(int[][] jobs) {
        int[] arr = new int[2];
        ArrayList<Job> list = new ArrayList<>();

        for (int i = 0; i < jobs.length; i++) {
            list.add(new Job(jobs[i][0], jobs[i][1], jobs[i][2]));
        }

        Comp c = new Comp();
        Collections.sort(list, c);

        int count = 0;
        int maxp = 0;
        boolean[] slot = new boolean[jobs.length];

        for (Job job : list) {
            for (int j = Math.min(jobs.length - 1, job.deadline - 1); j >= 0; j--) {
                if (!slot[j]) {
                    count++;
                    maxp += job.profit;
                    slot[j] = true;
                    break;
                }
            }
        }

        arr[0] = count;
        arr[1] = maxp;
        return arr;
    }
}
