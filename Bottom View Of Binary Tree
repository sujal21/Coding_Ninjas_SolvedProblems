import java.util.*;

class Point {
    TreeNode root;
    int x;

    public Point(TreeNode root, int x) {
        this.root = root;
        this.x = x;
    }
}

public class Solution {
    public static List<Integer> bottomView(TreeNode root) {
        List<Integer> res = new ArrayList<>();
        if (root == null) {
            return res;
        }
        TreeMap<Integer, Integer> map = new TreeMap<>();
        Queue<Point> q = new LinkedList<>();
        q.add(new Point(root, 0));
        while (!q.isEmpty()) {
            Point curr = q.poll();
            TreeNode newRoot = curr.root;
            int hpos = curr.x;

            map.put(hpos, newRoot.val);

            if (newRoot.left != null) {
                q.add(new Point(newRoot.left, hpos - 1));
            }

            if (newRoot.right != null) {
                q.add(new Point(newRoot.right, hpos + 1));
            }
        }

        res.addAll(map.values());
        return res;
    }
}
