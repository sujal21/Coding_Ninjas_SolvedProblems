import java.util.* ;
import java.io.*; 

public class Solution {
    static int[][] memo;

    public static int func(int[] weight, int[] value, int capacity, int idx) {
        if (idx == 0) {
            if (weight[idx] <= capacity) {
                return value[idx];
            } else {
                return 0;
            }
        }
        if (memo[idx][capacity] != -1) {
            return memo[idx][capacity];
        }
        int notTake = 0 + func(weight, value, capacity, idx - 1);
        int take = Integer.MIN_VALUE;
        if (weight[idx] <= capacity) {
            take = value[idx] + func(weight, value, capacity - weight[idx], idx - 1);
        }
        return memo[idx][capacity] = Math.max(take, notTake);
    }

    static int knapsack(int[] weight, int[] value, int n, int maxWeight) {
        // Initialize the memo table with -1
        memo = new int[n][maxWeight + 1];
        for (int i = 0; i < n; i++) {
            Arrays.fill(memo[i], -1);
        }
        return func(weight, value, maxWeight, n - 1);
    }
}
