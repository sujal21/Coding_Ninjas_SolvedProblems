import java.util.*;

public class Solution {
    public static boolean isSubsetPresent(int n, int k, int[] a) {
        boolean[][] dp = new boolean[n + 1][k + 1];

        // Initialize the base case (an empty subset can always achieve a sum of 0)
        for (int i = 0; i <= n; i++) {
            dp[i][0] = true;
        }

        // Fill the dp table
        for (int i = 1; i <= n; i++) {
            for (int j = 1; j <= k; j++) {
                if (a[i - 1] <= j) {
                    dp[i][j] = dp[i - 1][j] || dp[i - 1][j - a[i - 1]];
                } else {
                    dp[i][j] = dp[i - 1][j];
                }
            }
        }

        return dp[n][k];
    }
}
