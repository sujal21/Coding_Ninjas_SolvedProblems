import java.util.*;
public class Solution {
    public static int[] topoSort(int v,ArrayList<ArrayList<Integer>> adj){
        int[] indegree=new int[v];
        for(int i=0;i<v;i++){
            for(Integer it:adj.get(i)){
                indegree[it]++;
            }
        }

        Queue<Integer> q=new LinkedList<>();
        for(int i=0;i<v;i++){
            if(indegree[i]==0){
                q.add(i);
            }
        }

        int[] topo=new int[v];
        int idx=0;
        while(!q.isEmpty()){
            int node=q.poll();
            topo[idx]=node;

            for(Integer it:adj.get(node)){
                indegree[it]--;
                if(indegree[it]==0){
                    q.add(it);
                }
            }
            idx++;
        }
        return topo;
    }
    public static String getAlienLanguage(String []dictionary, int k) {
        // Write your code here.
        ArrayList<ArrayList<Integer>> adj=new ArrayList<>();
        for(int i=0;i<k;i++){
            adj.add(new ArrayList<>());
        }

        for(int i=0;i<dictionary.length-1;i++){
            String s1=dictionary[i];
            String s2=dictionary[i+1];

            int len=Math.min(s1.length(),s2.length());
            for(int ptr=0;ptr<len;ptr++){
                if(s1.charAt(ptr)!=s2.charAt(ptr)){
                    adj.get(s1.charAt(ptr)-'a').add(s2.charAt(ptr)-'a');
                    break;
                }
            }
        }

        int[] topo=topoSort(k,adj);
        String ans="";
        for(int i=0;i<topo.length;i++){
            ans=ans+(char)(topo[i]+(int)'a');
        }
        return ans;
    }
}
